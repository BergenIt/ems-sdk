// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.12.4
// source: shared_device.proto

package cluster_contract

import (
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Тип результата выполнения операции.
type OperationState int32

const (
	// Невалидное значение.
	OperationState_OPERATION_STATE_UNSPECIFIED OperationState = 0
	// Операция завершена успешно.
	OperationState_OPERATION_STATE_SUCCESS OperationState = 1
	// Выполнение операции завершилось с ошибкой.
	OperationState_OPERATION_STATE_FAILED OperationState = 2
)

// Enum value maps for OperationState.
var (
	OperationState_name = map[int32]string{
		0: "OPERATION_STATE_UNSPECIFIED",
		1: "OPERATION_STATE_SUCCESS",
		2: "OPERATION_STATE_FAILED",
	}
	OperationState_value = map[string]int32{
		"OPERATION_STATE_UNSPECIFIED": 0,
		"OPERATION_STATE_SUCCESS":     1,
		"OPERATION_STATE_FAILED":      2,
	}
)

func (x OperationState) Enum() *OperationState {
	p := new(OperationState)
	*p = x
	return p
}

func (x OperationState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OperationState) Descriptor() protoreflect.EnumDescriptor {
	return file_shared_device_proto_enumTypes[0].Descriptor()
}

func (OperationState) Type() protoreflect.EnumType {
	return &file_shared_device_proto_enumTypes[0]
}

func (x OperationState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OperationState.Descriptor instead.
func (OperationState) EnumDescriptor() ([]byte, []int) {
	return file_shared_device_proto_rawDescGZIP(), []int{0}
}

// Протоколы подключения.
type ConnectorProtocol int32

const (
	// Невалидное значение.
	ConnectorProtocol_CONNECTOR_PROTOCOL_UNSPECIFIED ConnectorProtocol = 0
	// Ipmi протокол для проверки подключения.
	ConnectorProtocol_CONNECTOR_PROTOCOL_IPMI ConnectorProtocol = 1
	// Redfish протокол для проверки подключения.
	ConnectorProtocol_CONNECTOR_PROTOCOL_REDFISH ConnectorProtocol = 2
	// Snmp протокол для проверки подключения.
	ConnectorProtocol_CONNECTOR_PROTOCOL_SNMP ConnectorProtocol = 3
	// Ssh протокол для проверки подключения.
	ConnectorProtocol_CONNECTOR_PROTOCOL_SSH ConnectorProtocol = 4
	// Wmi протокол для проверки подключения.
	ConnectorProtocol_CONNECTOR_PROTOCOL_WMI ConnectorProtocol = 5
)

// Enum value maps for ConnectorProtocol.
var (
	ConnectorProtocol_name = map[int32]string{
		0: "CONNECTOR_PROTOCOL_UNSPECIFIED",
		1: "CONNECTOR_PROTOCOL_IPMI",
		2: "CONNECTOR_PROTOCOL_REDFISH",
		3: "CONNECTOR_PROTOCOL_SNMP",
		4: "CONNECTOR_PROTOCOL_SSH",
		5: "CONNECTOR_PROTOCOL_WMI",
	}
	ConnectorProtocol_value = map[string]int32{
		"CONNECTOR_PROTOCOL_UNSPECIFIED": 0,
		"CONNECTOR_PROTOCOL_IPMI":        1,
		"CONNECTOR_PROTOCOL_REDFISH":     2,
		"CONNECTOR_PROTOCOL_SNMP":        3,
		"CONNECTOR_PROTOCOL_SSH":         4,
		"CONNECTOR_PROTOCOL_WMI":         5,
	}
)

func (x ConnectorProtocol) Enum() *ConnectorProtocol {
	p := new(ConnectorProtocol)
	*p = x
	return p
}

func (x ConnectorProtocol) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ConnectorProtocol) Descriptor() protoreflect.EnumDescriptor {
	return file_shared_device_proto_enumTypes[1].Descriptor()
}

func (ConnectorProtocol) Type() protoreflect.EnumType {
	return &file_shared_device_proto_enumTypes[1]
}

func (x ConnectorProtocol) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ConnectorProtocol.Descriptor instead.
func (ConnectorProtocol) EnumDescriptor() ([]byte, []int) {
	return file_shared_device_proto_rawDescGZIP(), []int{1}
}

// Описание источника сбора данных.
type DeviceDataIdentity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Идентификатор устройства.
	DeviceId string `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	// Идентификатор объекта прав доступа.
	AccessObjectId string `protobuf:"bytes,2,opt,name=access_object_id,json=accessObjectId,proto3" json:"access_object_id,omitempty"`
	// Идентификатор rpc, с которого были собраны данные.
	Source ServiceSource `protobuf:"varint,3,opt,name=source,proto3,enum=tool_cluster.v4.ServiceSource" json:"source,omitempty"`
}

func (x *DeviceDataIdentity) Reset() {
	*x = DeviceDataIdentity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shared_device_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceDataIdentity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceDataIdentity) ProtoMessage() {}

func (x *DeviceDataIdentity) ProtoReflect() protoreflect.Message {
	mi := &file_shared_device_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceDataIdentity.ProtoReflect.Descriptor instead.
func (*DeviceDataIdentity) Descriptor() ([]byte, []int) {
	return file_shared_device_proto_rawDescGZIP(), []int{0}
}

func (x *DeviceDataIdentity) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *DeviceDataIdentity) GetAccessObjectId() string {
	if x != nil {
		return x.AccessObjectId
	}
	return ""
}

func (x *DeviceDataIdentity) GetSource() ServiceSource {
	if x != nil {
		return x.Source
	}
	return ServiceSource_SERVICE_SOURCE_UNSPECIFIED
}

// Результат выполнения операции
type OperationResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Идентификатор устройства, на котором происходила операция.
	DeviceId string `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	// Тип результата выполнения операции.
	State OperationState `protobuf:"varint,2,opt,name=state,proto3,enum=tool_cluster.v4.OperationState" json:"state,omitempty"`
	// Текстовое описание результата выполнения операции.
	Output string `protobuf:"bytes,3,opt,name=output,proto3" json:"output,omitempty"`
}

func (x *OperationResult) Reset() {
	*x = OperationResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shared_device_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperationResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperationResult) ProtoMessage() {}

func (x *OperationResult) ProtoReflect() protoreflect.Message {
	mi := &file_shared_device_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperationResult.ProtoReflect.Descriptor instead.
func (*OperationResult) Descriptor() ([]byte, []int) {
	return file_shared_device_proto_rawDescGZIP(), []int{1}
}

func (x *OperationResult) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *OperationResult) GetState() OperationState {
	if x != nil {
		return x.State
	}
	return OperationState_OPERATION_STATE_UNSPECIFIED
}

func (x *OperationResult) GetOutput() string {
	if x != nil {
		return x.Output
	}
	return ""
}

// Данные по 1 устройству.
type DeviceContent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Идентификатор устройства.
	DeviceId string `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	// Идентификатор объекта прав доступа.
	AccessObjectId string `protobuf:"bytes,2,opt,name=access_object_id,json=accessObjectId,proto3" json:"access_object_id,omitempty"`
	// Название модели устройства.
	ModelName string `protobuf:"bytes,3,opt,name=model_name,json=modelName,proto3" json:"model_name,omitempty"`
	// Название вендора устройства.
	VendorName string `protobuf:"bytes,4,opt,name=vendor_name,json=vendorName,proto3" json:"vendor_name,omitempty"`
	// Интерфейсы подключения к устройству.
	Connectors []*DeviceConnector `protobuf:"bytes,5,rep,name=connectors,proto3" json:"connectors,omitempty"`
}

func (x *DeviceContent) Reset() {
	*x = DeviceContent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shared_device_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceContent) ProtoMessage() {}

func (x *DeviceContent) ProtoReflect() protoreflect.Message {
	mi := &file_shared_device_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceContent.ProtoReflect.Descriptor instead.
func (*DeviceContent) Descriptor() ([]byte, []int) {
	return file_shared_device_proto_rawDescGZIP(), []int{2}
}

func (x *DeviceContent) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *DeviceContent) GetAccessObjectId() string {
	if x != nil {
		return x.AccessObjectId
	}
	return ""
}

func (x *DeviceContent) GetModelName() string {
	if x != nil {
		return x.ModelName
	}
	return ""
}

func (x *DeviceContent) GetVendorName() string {
	if x != nil {
		return x.VendorName
	}
	return ""
}

func (x *DeviceContent) GetConnectors() []*DeviceConnector {
	if x != nil {
		return x.Connectors
	}
	return nil
}

// Интерфейс подключения к устройству.
type DeviceConnector struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Идентификатор сетевого интерфейса.
	DeviceNetworkId string `protobuf:"bytes,1,opt,name=device_network_id,json=deviceNetworkId,proto3" json:"device_network_id,omitempty"`
	// Адрес подключения (ip/fqdn)
	Address string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	// Mac адрес
	Mac *wrappers.StringValue `protobuf:"bytes,3,opt,name=mac,proto3" json:"mac,omitempty"`
	// Учетные данные подключения.
	Credentials []*Credential `protobuf:"bytes,4,rep,name=credentials,proto3" json:"credentials,omitempty"`
}

func (x *DeviceConnector) Reset() {
	*x = DeviceConnector{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shared_device_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceConnector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceConnector) ProtoMessage() {}

func (x *DeviceConnector) ProtoReflect() protoreflect.Message {
	mi := &file_shared_device_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceConnector.ProtoReflect.Descriptor instead.
func (*DeviceConnector) Descriptor() ([]byte, []int) {
	return file_shared_device_proto_rawDescGZIP(), []int{3}
}

func (x *DeviceConnector) GetDeviceNetworkId() string {
	if x != nil {
		return x.DeviceNetworkId
	}
	return ""
}

func (x *DeviceConnector) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *DeviceConnector) GetMac() *wrappers.StringValue {
	if x != nil {
		return x.Mac
	}
	return nil
}

func (x *DeviceConnector) GetCredentials() []*Credential {
	if x != nil {
		return x.Credentials
	}
	return nil
}

// Учетные данные подключения.
type Credential struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Протокол подключения.
	Protocol ConnectorProtocol `protobuf:"varint,1,opt,name=protocol,proto3,enum=tool_cluster.v4.ConnectorProtocol" json:"protocol,omitempty"`
	// Логин для подключения.
	Login string `protobuf:"bytes,2,opt,name=login,proto3" json:"login,omitempty"`
	// Пароль для подключения.
	Password string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	// Порт подключения.
	Port int32 `protobuf:"varint,4,opt,name=port,proto3" json:"port,omitempty"`
	// Шифрование (только для IPMI).
	Cipher int32 `protobuf:"varint,5,opt,name=cipher,proto3" json:"cipher,omitempty"`
	// Версия протокола (только для SNMP).
	Version int32 `protobuf:"varint,6,opt,name=version,proto3" json:"version,omitempty"`
	// Community слово (только для SNMP).
	Community string `protobuf:"bytes,7,opt,name=community,proto3" json:"community,omitempty"`
	// Security name (только для SNMP).
	SecurityName string `protobuf:"bytes,8,opt,name=security_name,json=securityName,proto3" json:"security_name,omitempty"`
	// Контекст подключения (только для SNMP).
	Context string `protobuf:"bytes,9,opt,name=context,proto3" json:"context,omitempty"`
	// Auth protocol (только для SNMP).
	AuthProtocol string `protobuf:"bytes,10,opt,name=auth_protocol,json=authProtocol,proto3" json:"auth_protocol,omitempty"`
	// Auth key (только для SNMP).
	AuthKey string `protobuf:"bytes,11,opt,name=auth_key,json=authKey,proto3" json:"auth_key,omitempty"`
	// Private protocol (только для SNMP).
	PrivateProtocol string `protobuf:"bytes,12,opt,name=private_protocol,json=privateProtocol,proto3" json:"private_protocol,omitempty"`
	// Private key (только для SNMP).
	PrivateKey string `protobuf:"bytes,13,opt,name=private_key,json=privateKey,proto3" json:"private_key,omitempty"`
	// Уровень безопасности (только для SNMP).
	SecurityLevel string `protobuf:"bytes,14,opt,name=security_level,json=securityLevel,proto3" json:"security_level,omitempty"`
}

func (x *Credential) Reset() {
	*x = Credential{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shared_device_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Credential) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Credential) ProtoMessage() {}

func (x *Credential) ProtoReflect() protoreflect.Message {
	mi := &file_shared_device_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Credential.ProtoReflect.Descriptor instead.
func (*Credential) Descriptor() ([]byte, []int) {
	return file_shared_device_proto_rawDescGZIP(), []int{4}
}

func (x *Credential) GetProtocol() ConnectorProtocol {
	if x != nil {
		return x.Protocol
	}
	return ConnectorProtocol_CONNECTOR_PROTOCOL_UNSPECIFIED
}

func (x *Credential) GetLogin() string {
	if x != nil {
		return x.Login
	}
	return ""
}

func (x *Credential) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *Credential) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *Credential) GetCipher() int32 {
	if x != nil {
		return x.Cipher
	}
	return 0
}

func (x *Credential) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *Credential) GetCommunity() string {
	if x != nil {
		return x.Community
	}
	return ""
}

func (x *Credential) GetSecurityName() string {
	if x != nil {
		return x.SecurityName
	}
	return ""
}

func (x *Credential) GetContext() string {
	if x != nil {
		return x.Context
	}
	return ""
}

func (x *Credential) GetAuthProtocol() string {
	if x != nil {
		return x.AuthProtocol
	}
	return ""
}

func (x *Credential) GetAuthKey() string {
	if x != nil {
		return x.AuthKey
	}
	return ""
}

func (x *Credential) GetPrivateProtocol() string {
	if x != nil {
		return x.PrivateProtocol
	}
	return ""
}

func (x *Credential) GetPrivateKey() string {
	if x != nil {
		return x.PrivateKey
	}
	return ""
}

func (x *Credential) GetSecurityLevel() string {
	if x != nil {
		return x.SecurityLevel
	}
	return ""
}

var File_shared_device_proto protoreflect.FileDescriptor

var file_shared_device_proto_rawDesc = []byte{
	0x0a, 0x13, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x74, 0x6f, 0x6f, 0x6c, 0x5f, 0x63, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x2e, 0x76, 0x34, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x5f, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x93, 0x01, 0x0a, 0x12,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12,
	0x28, 0x0a, 0x10, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x06, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x74, 0x6f, 0x6f, 0x6c,
	0x5f, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x34, 0x2e, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x22, 0x7d, 0x0a, 0x0f, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49,
	0x64, 0x12, 0x35, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1f, 0x2e, 0x74, 0x6f, 0x6f, 0x6c, 0x5f, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x2e,
	0x76, 0x34, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x22, 0xd8, 0x01, 0x0a, 0x0d, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12,
	0x28, 0x0a, 0x10, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x76, 0x65, 0x6e, 0x64,
	0x6f, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x76,
	0x65, 0x6e, 0x64, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x40, 0x0a, 0x0a, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x74, 0x6f, 0x6f, 0x6c, 0x5f, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x34, 0x2e,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52,
	0x0a, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x22, 0xc6, 0x01, 0x0a, 0x0f,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12,
	0x2a, 0x0a, 0x11, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2e, 0x0a, 0x03, 0x6d, 0x61, 0x63, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x03, 0x6d, 0x61, 0x63, 0x12, 0x3d, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x74, 0x6f, 0x6f,
	0x6c, 0x5f, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x34, 0x2e, 0x43, 0x72, 0x65,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x73, 0x22, 0xd4, 0x03, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x12, 0x3e, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x74, 0x6f, 0x6f, 0x6c, 0x5f, 0x63, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x34, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x69, 0x70,
	0x68, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x63, 0x69, 0x70, 0x68, 0x65,
	0x72, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x63,
	0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x65, 0x63,
	0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x75, 0x74, 0x68,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x61, 0x75, 0x74, 0x68, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x19, 0x0a,
	0x08, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x61, 0x75, 0x74, 0x68, 0x4b, 0x65, 0x79, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x72, 0x69, 0x76,
	0x61, 0x74, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x5f, 0x6b,
	0x65, 0x79, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74,
	0x65, 0x4b, 0x65, 0x79, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79,
	0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x65,
	0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x2a, 0x6a, 0x0a, 0x0e, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x0a,
	0x1b, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45,
	0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1b,
	0x0a, 0x17, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x45, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x01, 0x12, 0x1a, 0x0a, 0x16, 0x4f,
	0x50, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x46,
	0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x02, 0x2a, 0xc9, 0x01, 0x0a, 0x11, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x22, 0x0a,
	0x1e, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x4f, 0x52, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f,
	0x43, 0x4f, 0x4c, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x1b, 0x0a, 0x17, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x4f, 0x52, 0x5f, 0x50,
	0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4f, 0x4c, 0x5f, 0x49, 0x50, 0x4d, 0x49, 0x10, 0x01, 0x12, 0x1e,
	0x0a, 0x1a, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x4f, 0x52, 0x5f, 0x50, 0x52, 0x4f, 0x54,
	0x4f, 0x43, 0x4f, 0x4c, 0x5f, 0x52, 0x45, 0x44, 0x46, 0x49, 0x53, 0x48, 0x10, 0x02, 0x12, 0x1b,
	0x0a, 0x17, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x4f, 0x52, 0x5f, 0x50, 0x52, 0x4f, 0x54,
	0x4f, 0x43, 0x4f, 0x4c, 0x5f, 0x53, 0x4e, 0x4d, 0x50, 0x10, 0x03, 0x12, 0x1a, 0x0a, 0x16, 0x43,
	0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x4f, 0x52, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4f,
	0x4c, 0x5f, 0x53, 0x53, 0x48, 0x10, 0x04, 0x12, 0x1a, 0x0a, 0x16, 0x43, 0x4f, 0x4e, 0x4e, 0x45,
	0x43, 0x54, 0x4f, 0x52, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4f, 0x4c, 0x5f, 0x57, 0x4d,
	0x49, 0x10, 0x05, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_shared_device_proto_rawDescOnce sync.Once
	file_shared_device_proto_rawDescData = file_shared_device_proto_rawDesc
)

func file_shared_device_proto_rawDescGZIP() []byte {
	file_shared_device_proto_rawDescOnce.Do(func() {
		file_shared_device_proto_rawDescData = protoimpl.X.CompressGZIP(file_shared_device_proto_rawDescData)
	})
	return file_shared_device_proto_rawDescData
}

var file_shared_device_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_shared_device_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_shared_device_proto_goTypes = []interface{}{
	(OperationState)(0),          // 0: tool_cluster.v4.OperationState
	(ConnectorProtocol)(0),       // 1: tool_cluster.v4.ConnectorProtocol
	(*DeviceDataIdentity)(nil),   // 2: tool_cluster.v4.DeviceDataIdentity
	(*OperationResult)(nil),      // 3: tool_cluster.v4.OperationResult
	(*DeviceContent)(nil),        // 4: tool_cluster.v4.DeviceContent
	(*DeviceConnector)(nil),      // 5: tool_cluster.v4.DeviceConnector
	(*Credential)(nil),           // 6: tool_cluster.v4.Credential
	(ServiceSource)(0),           // 7: tool_cluster.v4.ServiceSource
	(*wrappers.StringValue)(nil), // 8: google.protobuf.StringValue
}
var file_shared_device_proto_depIdxs = []int32{
	7, // 0: tool_cluster.v4.DeviceDataIdentity.source:type_name -> tool_cluster.v4.ServiceSource
	0, // 1: tool_cluster.v4.OperationResult.state:type_name -> tool_cluster.v4.OperationState
	5, // 2: tool_cluster.v4.DeviceContent.connectors:type_name -> tool_cluster.v4.DeviceConnector
	8, // 3: tool_cluster.v4.DeviceConnector.mac:type_name -> google.protobuf.StringValue
	6, // 4: tool_cluster.v4.DeviceConnector.credentials:type_name -> tool_cluster.v4.Credential
	1, // 5: tool_cluster.v4.Credential.protocol:type_name -> tool_cluster.v4.ConnectorProtocol
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_shared_device_proto_init() }
func file_shared_device_proto_init() {
	if File_shared_device_proto != nil {
		return
	}
	file_shared_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_shared_device_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceDataIdentity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shared_device_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OperationResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shared_device_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceContent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shared_device_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceConnector); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shared_device_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Credential); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_shared_device_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_shared_device_proto_goTypes,
		DependencyIndexes: file_shared_device_proto_depIdxs,
		EnumInfos:         file_shared_device_proto_enumTypes,
		MessageInfos:      file_shared_device_proto_msgTypes,
	}.Build()
	File_shared_device_proto = out.File
	file_shared_device_proto_rawDesc = nil
	file_shared_device_proto_goTypes = nil
	file_shared_device_proto_depIdxs = nil
}
