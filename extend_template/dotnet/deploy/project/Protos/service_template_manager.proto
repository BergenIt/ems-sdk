syntax = "proto3";

package tool_cluster.v4;

import "shared_device.proto";
import "shared_device_available.proto";
import "shared_device_initial.proto";
import "shared_device_operation_system.proto";
import "shared_device_power_usage.proto";
import "shared_device_temperature.proto";
import "shared_device_template.proto";

service TemplateManager {
  rpc CheckAvailable(CheckTemplateAvailableRequest) returns (CheckTemplateAvailableResponse);
  rpc CollectDeviceInitialContent(CollectDeviceInitialContentTemplateRequest) returns (CollectDeviceInitialContentTemplateResponse);
  rpc CollectOperationSystem(CollectTemplateOperationSystemRequest) returns (CollectTemplateOperationSystemResponse);
  rpc CollectTemperature(CollectTemplateTemperatureRequest) returns (CollectTemplateTemperatureResponse);
  rpc CollectPowerUsage(CollectTemplatePowerUsageRequest) returns (CollectTemplatePowerUsageResponse);
  rpc CollectSensors(CollectTemplateSensorRequest) returns (CollectTemplateSensorResponse);
  rpc CollectInventories(CollectTemplateInventoriesRequest) returns (CollectTemplateInventoriesResponse);
}

message CheckTemplateAvailableRequest {
  DeviceContent device = 1;
}

message CheckTemplateAvailableResponse {
  DeviceAvailable connector_state = 1;
}

message CollectDeviceInitialContentTemplateRequest {
  DeviceInitialInput device_input = 1;
}

message CollectDeviceInitialContentTemplateResponse {
  DeviceInitialContent content = 2;
}

message CollectTemplateOperationSystemRequest {
  DeviceContent device = 1;
  repeated SystemMetricTemplate metric_templates = 2;
}
  
message CollectTemplateOperationSystemResponse {
  DeviceOperationSystem operation_system = 1;
}

message CollectTemplateTemperatureRequest {
  DeviceContent device = 1;
  repeated SystemMetricTemplate metric_templates = 2;
}

message CollectTemplateTemperatureResponse {
  DeviceTemperature temperature = 1;
}

message CollectTemplatePowerUsageRequest {
  DeviceContent device = 1;
  repeated SystemMetricTemplate metric_templates = 2;
}

message CollectTemplatePowerUsageResponse {
  DevicePowerUsage usage = 1;
}

message CollectTemplateSensorRequest {
  DeviceContent device = 1;
  repeated SensorTemplate sensors = 2;
}

message CollectTemplateSensorResponse {
  DeviceSensorValues sensor_values = 1;
}

message CollectTemplateInventoriesRequest {
  DeviceContent device = 1;
  repeated InventoryTemplate inventories = 2;
}

message CollectTemplateInventoriesResponse {
  DeviceInventoryValues inventory_values = 1;
}
